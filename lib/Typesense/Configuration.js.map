{"version":3,"sources":["Typesense/Configuration.js"],"names":["Configuration","options","nodes","map","node","_setDefaultPathInNode","_setDefaultPortInNode","nearestNode","connectionTimeoutSeconds","timeoutSeconds","healthcheckIntervalSeconds","numRetries","length","retryIntervalSeconds","apiKey","sendApiKeyAsQueryParam","logger","logLevel","setLevel","_showDeprecationWarnings","validate","_validateNodes","MissingConfigurationError","_isNodeMissingAnyParameters","some","every","key","hasOwnProperty","path","protocol","port","warn","masterNode","readReplicaNodes"],"mappings":"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","sourcesContent":["'use strict'\n\nimport logger from 'loglevel'\nimport {MissingConfigurationError} from './Errors'\n\nexport default class Configuration {\n  constructor (options = {}) {\n    this.nodes = options.nodes || []\n    this.nodes = this.nodes\n      .map(node => this._setDefaultPathInNode(node))\n      .map(node => this._setDefaultPortInNode(node))\n    this.nearestNode = options.nearestNode || null\n    this.nearestNode = this._setDefaultPathInNode(this.nearestNode)\n    this.nearestNode = this._setDefaultPortInNode(this.nearestNode)\n    this.connectionTimeoutSeconds = options.connectionTimeoutSeconds || options.timeoutSeconds || 10\n    this.healthcheckIntervalSeconds = options.healthcheckIntervalSeconds || 15\n    this.numRetries = options.numRetries || this.nodes.length + (this.nearestNode == null ? 0 : 1) || 3\n    this.retryIntervalSeconds = options.retryIntervalSeconds || 0.1\n    this.apiKey = options.apiKey\n    this.sendApiKeyAsQueryParam = options.sendApiKeyAsQueryParam || false\n\n    this.logger = options.logger || logger\n    this.logLevel = options.logLevel || 'warn'\n    this.logger.setLevel(this.logLevel)\n\n    this._showDeprecationWarnings(options)\n    this.validate()\n  }\n\n  validate () {\n    if (this.nodes == null || this.nodes.length === 0 || this._validateNodes()) {\n      throw new MissingConfigurationError('Ensure that nodes[].protocol, nodes[].host and nodes[].port are set')\n    }\n\n    if (this.nearestNode != null && this._isNodeMissingAnyParameters(this.nearestNode)) {\n      throw new MissingConfigurationError('Ensure that nearestNodes.protocol, nearestNodes.host and nearestNodes.port are set')\n    }\n\n    if (this.apiKey == null) {\n      throw new MissingConfigurationError('Ensure that apiKey is set')\n    }\n\n    return true\n  }\n\n  _validateNodes () {\n    return this.nodes.some((node) => {\n      return this._isNodeMissingAnyParameters(node)\n    })\n  }\n\n  _isNodeMissingAnyParameters (node) {\n    return !['protocol', 'host', 'port', 'path'].every((key) => {\n      return node.hasOwnProperty(key)\n    })\n  }\n\n  _setDefaultPathInNode (node) {\n    if (node != null && !node.hasOwnProperty('path')) {\n      node.path = ''\n    }\n    return node\n  }\n\n  _setDefaultPortInNode (node) {\n    if (node != null && !node.hasOwnProperty('port') && node.hasOwnProperty('protocol')) {\n      switch (node.protocol) {\n        case 'https':\n          node.port = 443\n          break\n        case 'http':\n          node.port = 80\n          break\n      }\n    }\n    return node\n  }\n\n  _showDeprecationWarnings (options) {\n    if (options.timeoutSeconds) {\n      this.logger.warn('Deprecation warning: timeoutSeconds is now renamed to connectionTimeoutSeconds')\n    }\n    if (options.masterNode) {\n      this.logger.warn('Deprecation warning: masterNode is now consolidated to nodes, starting with Typesense Server v0.12')\n    }\n    if (options.readReplicaNodes) {\n      this.logger.warn('Deprecation warning: readReplicaNodes is now consolidated to nodes, starting with Typesense Server v0.12')\n    }\n  }\n}\n"],"file":"Configuration.js"}