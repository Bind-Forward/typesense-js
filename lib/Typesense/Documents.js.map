{"version":3,"sources":["Typesense/Documents.js"],"names":["RESOURCEPATH","Documents","collectionName","apiCall","_collectionName","_apiCall","document","post","_endpointPath","documents","documentsInJSONLFormat","map","JSON","stringify","join","import","performRequest","undefined","get","then","result","Promise","resolve","split","searchParameters","operation","Collections"],"mappings":"AAAA;;;;;;;;;;;;;AAEA;;AAEA,IAAMA,YAAY,GAAG,YAArB;;IAEqBC,S;AACnB,qBAAaC,cAAb,EAA6BC,OAA7B,EAAsC;AAAA;AACpC,SAAKC,eAAL,GAAuBF,cAAvB;AACA,SAAKG,QAAL,GAAgBF,OAAhB;AACD;;;;2BAEOG,Q,EAAU;AAChB,aAAO,KAAKD,QAAL,CAAcE,IAAd,CAAmB,KAAKC,aAAL,EAAnB,EAAyCF,QAAzC,CAAP;AACD;;;+BAEWG,S,EAAW;AACrB,UAAIC,sBAAsB,GAAGD,SAAS,CAACE,GAAV,CAAc,UAAAL,QAAQ;AAAA,eAAIM,IAAI,CAACC,SAAL,CAAeP,QAAf,CAAJ;AAAA,OAAtB,EAAoDQ,IAApD,CAAyD,IAAzD,CAA7B;AACA,aAAO,KAAKC,MAAL,CAAYL,sBAAZ,CAAP;AACD;;;4BAEOA,sB,EAAwB;AAC9B,aAAO,KAAKL,QAAL,CAAcW,cAAd,CACL,MADK,EAEL,KAAKR,aAAL,CAAmB,QAAnB,CAFK,EAGLS,SAHK,EAILP,sBAJK,EAKL;AAAC,wBAAgB;AAAjB,OALK,CAAP;AAOD;;;8BAES;AACR,aAAO,KAAKL,QAAL,CAAca,GAAd,CAAkB,KAAKV,aAAL,CAAmB,QAAnB,CAAlB,EAAgDW,IAAhD,CAAqD,UAACC,MAAD,EAAY;AACtE,eAAOC,OAAO,CAACC,OAAR,CAAgBF,MAAM,CAACG,KAAP,CAAa,IAAb,CAAhB,CAAP;AACD,OAFM,CAAP;AAGD;;;2BAEOC,gB,EAAkB;AACxB,aAAO,KAAKnB,QAAL,CAAca,GAAd,CAAkB,KAAKV,aAAL,CAAmB,QAAnB,CAAlB,EAAgDgB,gBAAhD,CAAP;AACD;;;kCAEcC,S,EAAW;AACxB,uBAAUC,qBAAY1B,YAAtB,cAAsC,KAAKI,eAA3C,SAA6DH,SAAS,CAACD,YAAvE,SAAsFyB,SAAS,KAAKR,SAAd,GAA0B,EAA1B,GAA+B,MAAMQ,SAA3H;AACD;;;wBAE0B;AACzB,aAAOzB,YAAP;AACD","sourcesContent":["'use strict'\n\nimport Collections from './Collections'\n\nconst RESOURCEPATH = '/documents'\n\nexport default class Documents {\n  constructor (collectionName, apiCall) {\n    this._collectionName = collectionName\n    this._apiCall = apiCall\n  }\n\n  create (document) {\n    return this._apiCall.post(this._endpointPath(), document)\n  }\n\n  createMany (documents) {\n    let documentsInJSONLFormat = documents.map(document => JSON.stringify(document)).join('\\n')\n    return this.import(documentsInJSONLFormat)\n  }\n\n  import (documentsInJSONLFormat) {\n    return this._apiCall.performRequest(\n      'post',\n      this._endpointPath('import'),\n      undefined,\n      documentsInJSONLFormat,\n      {'Content-Type': 'text/plain'}\n    )\n  }\n\n  export () {\n    return this._apiCall.get(this._endpointPath('export')).then((result) => {\n      return Promise.resolve(result.split('\\n'))\n    })\n  }\n\n  search (searchParameters) {\n    return this._apiCall.get(this._endpointPath('search'), searchParameters)\n  }\n\n  _endpointPath (operation) {\n    return `${Collections.RESOURCEPATH}/${this._collectionName}${Documents.RESOURCEPATH}${operation === undefined ? '' : '/' + operation}`\n  }\n\n  static get RESOURCEPATH () {\n    return RESOURCEPATH\n  }\n}\n"],"file":"Documents.js"}