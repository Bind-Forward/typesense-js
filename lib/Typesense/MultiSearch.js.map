{"version":3,"sources":["Typesense/MultiSearch.js"],"names":["RESOURCEPATH","MultiSearch","apiCall","useTextContentType","_apiCall","_useTextContentType","searchRequests","commonParams","additionalHeaders","post"],"mappings":"AAAA;;;;;;;;;;;;;AAEA,IAAMA,YAAY,GAAG,eAArB;;IAEqBC,W;AACnB,uBAAaC,OAAb,EAAkD;AAAA,QAA5BC,kBAA4B,uEAAP,KAAO;AAAA;AAChD,SAAKC,QAAL,GAAgBF,OAAhB;AACA,SAAKG,mBAAL,GAA2BF,kBAA3B,CAFgD,CAEF;AAC/C;;;;WAED,iBAASG,cAAT,EAA4C;AAAA,UAAnBC,YAAmB,uEAAJ,EAAI;AAC1C,UAAIC,iBAAiB,GAAG,EAAxB;;AACA,UAAI,KAAKH,mBAAT,EAA8B;AAC5BG,QAAAA,iBAAiB,CAAC,cAAD,CAAjB,GAAoC,YAApC;AACD;;AACD,aAAO,KAAKJ,QAAL,CAAcK,IAAd,CAAmBT,YAAnB,EAAiCM,cAAjC,EAAiDC,YAAjD,EAA+DC,iBAA/D,CAAP;AACD","sourcesContent":["'use strict'\n\nconst RESOURCEPATH = '/multi_search'\n\nexport default class MultiSearch {\n  constructor (apiCall, useTextContentType = false) {\n    this._apiCall = apiCall\n    this._useTextContentType = useTextContentType // To avoid OPTIONS request\n  }\n\n  perform (searchRequests, commonParams = {}) {\n    let additionalHeaders = {}\n    if (this._useTextContentType) {\n      additionalHeaders['content-type'] = 'text/plain'\n    }\n    return this._apiCall.post(RESOURCEPATH, searchRequests, commonParams, additionalHeaders)\n  }\n}\n"],"file":"MultiSearch.js"}